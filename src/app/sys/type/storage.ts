import IBaseStorage from '../base/storage';
import UUID from '../util/uuid';

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

export interface IStorage extends IBaseStorage {
    get:<T>(path:string, options?:{
        fallback:T
    }) => T;
    set:<T>(path:string, value:T, options?:{
        file?:boolean, timeout?:number
    }) => void;
    del:(path:string) => void;
}

export interface IStorage extends IBaseStorage {
    on:(path:string, callback:Function) => UUID;
    un:(uuid:UUID) => void;
}

export interface IStorage extends IBaseStorage {
    load:<T>(path:string, value?:T) => T;
    save:<T>(path:string, value?:T) => void;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

export default IStorage;

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
