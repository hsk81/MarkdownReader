// tslint:disable:no-string-literal

import IBaseViewer from '../base/viewer';
import UUID from '../util/uuid';

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

declare let viewer:IViewer;

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

export interface IViewer extends IBaseViewer {
    get:<T>(path:string) => T;
    set:<T>(path:string, value:T) => void;
}

export interface IViewer extends IBaseViewer {
    on:(path:string, callback:Function) => UUID;
    un:(uuid:UUID) => void;
}

///////////////////////////////////////////////////////////////////////////////

viewer.get = viewer.getAttribute;
viewer.set = viewer.setAttribute;

viewer.on = viewer.subscribeToAttribute;
viewer.un = viewer.unsubscribeAttribute;

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

export default viewer;

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
